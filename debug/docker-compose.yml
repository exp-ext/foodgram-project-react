version: '3.9'

services:

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgresql_volume:/var/lib/postgresql/data/:rw
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        - DJANGO_SECRET_KEY
    restart: always
    volumes:
      - static_value:/app/static/:rw
      - media_value:/app/media/:rw
      - ../data/:/data/:ro
      - ../backend/:/app/:rw
    ports:
     - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/:rw

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ../frontend/build:/usr/share/nginx/html/:ro
      - ../docs/:/usr/share/nginx/html/api/docs/:ro
      - static_value:/var/html/static/:rw
      - media_value:/var/html/media/:rw
    depends_on:
      - backend
      - frontend

volumes:
  postgresql_volume:
  static_value:
  media_value:
